name: CI

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
      folder-name:
        type: string
        description: 'Select the folder to execute tests (use comma for multi-select)'
      test-type:
        type: choice
        description: 'Select the type of test'
        options:
          - All Tests
          - Nonreg

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Display Inputs
        run: |
          Write-Host "environment is ${{ github.event.inputs.environment }}"
          Write-Host "folder-name is ${{ github.event.inputs.folder-name }}"
          Write-Host "test-type is ${{ github.event.inputs.test-type }}"
          
      - name: Run Tests
        working-directory: ./src
        run: |
          npm install
          $env:FOLDER_NAME="${{ github.event.inputs.folder-name }}"
          Write-Host "FOLDER_NAME : $env:FOLDER_NAME"
          $env:FEATURE_PATH="./Features/tas-apis/$env:FOLDER_NAME/features"
          Write-Host "FEATURE_PATH : $env:FEATURE_PATH"

          # Run all feature files when 'All Tests' is selected
          if ("${{ github.event.inputs.test-type }}" -eq 'All Tests') {
            Write-Host "Running All Test Feature Files"
            $featureFiles = @()
            foreach ($file in (Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse)) {
              $featureFiles += $file.FullName -replace '\\', '/'
            }
          }
          # Run only @nonreg tagged feature files when 'Nonreg' is selected
          elseif ("${{ github.event.inputs.test-type }}" -eq 'Nonreg') {
            Write-Host "Running Nonreg Feature Files"
            $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object {
              $content = Get-Content $_
              if ($content -match '@nonreg') { $_.FullName -replace '\\', '/' }
            }
          } else {
            Write-Host "Please select a valid test type."
            exit 1
          }
          
          # Convert the array to a comma-separated string
          $env:FEATURE_FILES_STRING = $featureFiles -join ','
          Write-Host "FEATURE_FILES_STRING: $env:FEATURE_FILES_STRING"
          
          # Check if feature files were found and run the tests
          if (-not [string]::IsNullOrEmpty($env:FEATURE_FILES_STRING)) {
            npm run test "$env:FEATURE_FILES_STRING"  # <-- Add quotes around the variable
          } else {
            Write-Host "No feature files found for the selected test type."
          }
          
          Write-Host "Process completed."
