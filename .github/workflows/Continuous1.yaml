name: CI

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
      folder-name:
        type: choice
        description: 'Select the folder to execute tests'
        options:
          - sgnum
          - Test2
      nonreg:
        type: boolean
        description: Nonreg
      all-tests:
        type: boolean
        description: All Tests

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: greet
        run: | 
          echo "environment is ${{ github.event.inputs.environment }}"
          echo "nonreg is ${{ github.event.inputs.nonreg }}"
          echo "all-tests is ${{ github.event.inputs.all-tests }}"
          echo "folder-name is ${{ github.event.inputs.folder-name }}"
          
      - name: Run Tests
        working-directory: ./src  # Set the working directory to ./src
        run: |
          npm install
          $env:FOLDER_NAME="${{ github.event.inputs.folder-name }}"
          echo  "FOLDER_NAME : $env:FOLDER_NAME"
          $env:FEATURE_PATH="./Features/tas-apis/$env:FOLDER_NAME/features"
          echo  "FEATURE_PATH : $env:FEATURE_PATH"
          
          # Create an empty array to store feature files
          $featureFiles = @()
          
          # Search for feature files based on checkbox selection
          if (${{ github.event.inputs.all-tests }} == true) {
            $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object { $_.FullName -replace '\\', '/' }
            echo "All Test Feature Files: $featureFiles"
          } 
          elseif (${{ github.event.inputs.nonreg }} == true) {
            $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object {
              if (Get-Content $_ | Select-String -Pattern '@Nonreg') { $_.FullName -replace '\\', '/' }
            }
            echo "Nonreg Feature Files: $featureFiles"
          } else {
            echo "Please select either Nonreg or All Tests checkbox."
            exit 1
          }
          
          # Convert the array to a comma-separated string
          $env:FEATURE_FILES_STRING = $featureFiles -join ','
          
          # Check if feature files were found and run the tests
          if (-not [string]::IsNullOrEmpty($env:FEATURE_FILES_STRING)) {
            npm run test $env:FEATURE_FILES_STRING
          } else {
            echo "No feature files found in the selected folder."
          }
