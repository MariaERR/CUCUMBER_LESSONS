name: CI

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
      folder-name:
        type: string
        description: 'Enter the folder to execute tests (use comma for multi-select)'
      test-type:
        type: choice
        description: 'Select the type of test'
        options:
          - Nonreg
          - All Tests

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Run Tests
        run: |
          npm install
          $env:FOLDER_NAMES="${{ github.event.inputs.folder-name }}"
          $env:TEST_TYPE="${{ github.event.inputs.test-type }}"
          $folderNames = $env:FOLDER_NAMES -split ','

          foreach ($folderName in $folderNames) {
            $env:FOLDER_NAME=$folderName
            Write-Host "environment is ${{ github.event.inputs.environment }}"
            Write-Host "folder-name is $env:FOLDER_NAME"
            Write-Host "test-type is $env:TEST_TYPE"

            $env:FEATURE_PATH="$PWD/Features/tas-apis/$env:FOLDER_NAME/features"
            Write-Host "FEATURE_PATH : $env:FEATURE_PATH"

            # Create an empty array to store feature files
            $featureFiles = @()

            # Search for feature files based on test type selection
            if ($env:TEST_TYPE -eq 'All Tests') {
              Write-Host "Running All Test Feature Files"
              $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object { $_.FullName -replace '\\', '/' }
            } 
            elseif ($env:TEST_TYPE -eq 'Nonreg') {
              Write-Host "Running Nonreg Feature Files"
              $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object {
                $content = Get-Content $_
                if ($content -match '@nonreg') { $_.FullName -replace '\\', '/' }
              }
            } else {
              Write-Host "Please select a valid test type."
              exit 1
            }

            # Check if feature files were found and run the tests
            if ($featureFiles.Count -gt 0) {
              # Loop through the feature files and run the tests individually
              foreach ($file in $featureFiles) {
                Write-Host "Running feature file: $file"
                npm run test -- $file
              }
            } else {
              Write-Host "No feature files found for the selected test type."
              exit 1
            }

            Write-Host "Process completed for folder $env:FOLDER_NAME."
          }
