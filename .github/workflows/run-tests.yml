name: Run Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
      sgnum:
        type: boolean
        description: 'Select sgnum folder'
      Test2:
        type: boolean
        description: 'Select Test2 folder'
      test-type:
        type: choice
        description: 'Select the type of test'
        options:
          - Nonreg
          - All Tests

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Display Inputs
        run: |
          Write-Host "environment is ${{ github.event.inputs.environment }}"
          Write-Host "sgnum folder selected: ${{ github.event.inputs.sgnum }}"
          Write-Host "Test2 folder selected: ${{ github.event.inputs.Test2 }}"
          Write-Host "test-type is ${{ github.event.inputs.test-type }}"

      - name: Set up Folder Selection
        id: folder-selection
        run: |
          $folderNames = @("sgnum", "Test2") # Add other folder names here if needed
          $folderSelection = @{}
          foreach ($folder in $folderNames) {
            $folderSelection[$folder] = "${{ github.event.inputs[$folder] }}" -eq 'true'
          }
          Write-Output "folder-selection=$folderSelection" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: pwsh

      - name: Run Tests
        working-directory: ./src
        run: |
          $folderSelection = Get-Content $env:GITHUB_ENV | ConvertFrom-StringData
          $testType = "${{ github.event.inputs.test-type }}"
          foreach ($folder in $folderSelection.GetEnumerator()) {
            $env:FOLDER_NAME = $folder.Key
            if ($folder.Value) {
              Write-Host "Running tests for folder: $env:FOLDER_NAME"
              $env:FEATURE_PATH = "./Features/tas-apis/$env:FOLDER_NAME/features"
              Write-Host "FEATURE_PATH: $env:FEATURE_PATH"

              if ($testType -eq 'All Tests') {
                Write-Host "Running All Test Feature Files"
                $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object { $_.FullName -replace '\\', '/' }
              } elseif ($testType -eq 'Nonreg') {
                Write-Host "Running Nonreg Feature Files"
                $featureFiles = Get-ChildItem -Path $env:FEATURE_PATH -Filter "*.feature" -Recurse | ForEach-Object {
                  $content = Get-Content $_
                  if ($content -match '@nonreg') { $_.FullName -replace '\\', '/' }
                }
              } else {
                Write-Host "Please select a valid test type."
                exit 1
              }

              if ($featureFiles.Count -gt 0) {
                foreach ($file in $featureFiles) {
                  Write-Host "Running feature file: $file"
                  npm run test -- $file
                }
              } else {
                Write-Host "No feature files found for the selected test type in folder $env:FOLDER_NAME."
              }
            }
          }

          Write-Host "All folders completed."
